using Microsoft.AspNetCore.Mvc.RazorPages;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.AspNetCore.Razor.Language;
using System;
using System.Linq;

namespace razor_demo.Pages.Logs
{
    public class ProjectsModel : PageModel
    {
        private readonly string[] permittedExtensions = { ".jpg", ".png" };
        private readonly string _targetFilePath;
        private readonly IConfiguration _config;

        [BindProperty]
        [Required]
        public IFormFile FileToUpload { set; get; }
        public ProjectsModel(IConfiguration config)
        {
            _config = config;
            _targetFilePath = _config.GetConnectionString("filePath");

        }
        public void OnGet()
        {

        }
        public async void OnPostUploadAsync()
        {
            var ext = Path.GetExtension(FileToUpload.Name).ToLowerInvariant();
            if (string.IsNullOrEmpty(ext) || !permittedExtensions.Contains(ext))
            {
                // The extension is invalid ... discontinue processing the file
            }
            //var trustedFileNameForFileStorage = Path.GetRandomFileName();
            var filePath = Path.Combine(_targetFilePath, FileToUpload.FileName);
            using (var fileStream = System.IO.File.Create(filePath))
            {
                await FileToUpload.CopyToAsync(fileStream);
            }
        }
    }
}